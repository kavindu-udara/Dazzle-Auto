/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Dialog.java to edit this template
 */
package views.financeAndHr;

import com.google.gson.Gson;
import static com.mysql.cj.conf.PropertyKey.logger;
import controllers.EmployeeController;
import controllers.EmployeeImageController;
import controllers.EmployeeTypeController;
import controllers.StatusController;
import includes.BDUtility;
import includes.LoggerConfig;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.glxn.qrgen.core.image.ImageType;
import net.glxn.qrgen.javase.QRCode;

/**
 *
 * @author USER
 */
public class GenarateQr extends java.awt.Dialog {

    private static final Logger logger = LoggerConfig.getLogger();

    /**
     * Creates new form GenarateQr
     */
    public GenarateQr(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadEmployees();
    }

    private void loadEmployees() {
        try {

            ResultSet employeeResultSet = new EmployeeController().show();

            DefaultTableModel model = (DefaultTableModel) employeeViewTable.getModel();
            model.setRowCount(0);

            while (employeeResultSet.next()) {
                Vector<String> vector = new Vector<>();

                String employeeId = employeeResultSet.getString("id");
                vector.add(employeeId);
                vector.add(employeeResultSet.getString("nic"));
                vector.add(employeeResultSet.getString("first_name"));
                vector.add(employeeResultSet.getString("last_name"));
                vector.add(employeeResultSet.getString("email"));
                vector.add(employeeResultSet.getString("mobile"));
                vector.add(employeeResultSet.getString("registered_date"));

                model.addRow(vector);
            }

        } catch (Exception e) {
            e.printStackTrace();
            logger.severe("Error while loading Employee : " + e.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeeViewTable = new javax.swing.JTable();
        lblimage1 = new javax.swing.JLabel();
        btnsave = new javax.swing.JButton();
        btnsaveqrat = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });

        employeeViewTable.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        employeeViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID ", "NIC", "First Name ", "Last Name ", "Email ", "Mobile", "Registered date "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employeeViewTable.setRowHeight(30);
        employeeViewTable.getTableHeader().setReorderingAllowed(false);
        employeeViewTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeViewTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(employeeViewTable);

        lblimage1.setBackground(new java.awt.Color(255, 0, 51));
        lblimage1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        lblimage1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblimage1MouseClicked(evt);
            }
        });

        btnsave.setBackground(new java.awt.Color(204, 204, 0));
        btnsave.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        btnsave.setForeground(new java.awt.Color(255, 255, 255));
        btnsave.setText("SAVE QR");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnsaveqrat.setBackground(new java.awt.Color(153, 153, 153));
        btnsaveqrat.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        btnsaveqrat.setForeground(new java.awt.Color(255, 255, 255));
        btnsaveqrat.setText("SAVE QR AT");
        btnsaveqrat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveqratActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel1.setText("GENARATE QR");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                .addComponent(lblimage1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnsaveqrat, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(lblimage1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsaveqrat, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    ByteArrayOutputStream out = null;
    String email = null;
    private void employeeViewTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeViewTableMouseClicked

        int index = employeeViewTable.getSelectedRow();
        TableModel model = employeeViewTable.getModel();

        String id = model.getValueAt(index, 0).toString();
        String nic = model.getValueAt(index, 1).toString();
        email = model.getValueAt(index, 4).toString();

        Map<String, String> data = new HashMap<>();
        data.put("id", id);
        data.put("nic", nic);
        data.put("email", email);

        Gson gson = new Gson();
        String jsonData = gson.toJson(data);

        out = QRCode.from(jsonData).withSize(322, 295).to(ImageType.PNG).stream();
        try {

            byte[] imageData = out.toByteArray();
            ImageIcon icon = new ImageIcon(imageData);
            lblimage1.setIcon(icon);
        } catch (Exception ex) {

            ex.printStackTrace();

        }

    }//GEN-LAST:event_employeeViewTableMouseClicked

    private void lblimage1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblimage1MouseClicked

    }//GEN-LAST:event_lblimage1MouseClicked

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed

        try {
            if (out == null) {

                JOptionPane.showMessageDialog(null, "No Qr Generated");
                return;
            }

            String defaultDir = BDUtility.getPath("resources/qrCodes");
            File directory = new File(defaultDir);
            if (!directory.exists()) {

                directory.mkdirs();

            }

            File defaultFile = new File(directory, email + ".Jpg");
            try {

                java.nio.file.Files.write(defaultFile.toPath(), out.toByteArray());
                JOptionPane.showMessageDialog(null, "QR Code saved successfully!");

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error Saving Qr Code.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong.");
        }


    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnsaveqratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveqratActionPerformed

        try {

            if (out == null) {

                JOptionPane.showMessageDialog(null, "No Qr Generated.!");
                return;

            }

            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Save QR Code at");
            fileChooser.setSelectedFile(new File(email + ".png"));
            int userselection = fileChooser.showSaveDialog(this);
            if (userselection == fileChooser.APPROVE_OPTION) {

                File fileToSave = fileChooser.getSelectedFile();

                try {

                    java.nio.file.Files.write(fileToSave.toPath(), out.toByteArray());
                    JOptionPane.showMessageDialog(this, "QR Code saved Successfully!");

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Error Saving QR Code", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong.");
        }


    }//GEN-LAST:event_btnsaveqratActionPerformed

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown

        loadEmployees();

    }//GEN-LAST:event_jPanel1ComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GenarateQr dialog = new GenarateQr(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnsaveqrat;
    private javax.swing.JTable employeeViewTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblimage1;
    // End of variables declaration//GEN-END:variables
}
