/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Dialog.java to edit this template
 */
package views.supplier;

import controllers.AddressController;
import controllers.CityController;
import controllers.StatusController;
import controllers.SupplierController;
import includes.LoggerConfig;
import includes.OnlyLettersDocumentFilter;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;
import includes.OnlyNumbersDocumentFilter;
import includes.RegexValidator;
import java.awt.Frame;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import models.AddressModel;
import models.SupplierModel;

/**
 *
 * @author Dumindu
 */
public class SupplierUpdate extends java.awt.Dialog {

    private static final Logger logger = LoggerConfig.getLogger();
    private static HashMap<String, String> StatusMap = new HashMap<>();
    private static HashMap<Integer, String> CityMap = new HashMap<>();
    private SupplierViewJPanel supplierViewJPanel;
    private SupplierModel supplierModel;
    private AddressModel addressModel;

    /**
     * Creates new form Employee_Update
     */
    public SupplierUpdate(Frame parent, boolean modal, SupplierModel supplierModel, AddressModel addressModel) {
        super(parent, modal);
        initComponents();
        setDocumentFilters();
        loadSupplierStatus();
        loadCity();

        this.supplierModel = supplierModel;

        supIField.setText(supplierModel.getId());
        supplier_firstname.setText(supplierModel.getFirstName());
        supplier_lastname.setText(supplierModel.getLastName());
        supplier_email.setText(supplierModel.getEmail());
        supplier_mobile.setText(supplierModel.getMobile());
        sup_status.setSelectedItem(supplierModel.getStatusName());

        if (addressModel != null) {
            Lane1Field.setText(addressModel.getLane1());
            lane2Field.setText(addressModel.getLane2());
            if (addressModel.getCity() != null) {
                cityComboBox.setSelectedItem(CityMap.get(Integer.parseInt(addressModel.getCity())));
            }
        }
        supIField.setFocusable(false);
    }

    private void setDocumentFilters() {
        ((AbstractDocument) supplier_mobile.getDocument()).setDocumentFilter(new OnlyNumbersDocumentFilter());
        ((AbstractDocument) supplier_firstname.getDocument()).setDocumentFilter(new OnlyLettersDocumentFilter());
        ((AbstractDocument) supplier_lastname.getDocument()).setDocumentFilter(new OnlyLettersDocumentFilter());

    }

    private void loadCity() {

        try {
            ResultSet resultSet = new CityController().show();

            Vector<String> vector = new Vector<>();
            vector.add("Select");

            while (resultSet.next()) {
                int cityId = resultSet.getInt("id");
                String cityName = resultSet.getString("name");

                vector.add(cityName);
                CityMap.put(cityId, cityName);
            }

            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(vector);
            cityComboBox.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
            logger.severe("Error while loading cities: " + e.getMessage());
        }
    }

    private void loadSupplierStatus() {
        try {
            ResultSet resultSet = new StatusController().show();

            Vector<String> vector = new Vector<>();
            vector.add("Select");

            while (resultSet.next()) {
                vector.add(resultSet.getString("status"));
                StatusMap.put(resultSet.getString("status"), resultSet.getString("id"));
            }

            DefaultComboBoxModel model = new DefaultComboBoxModel(vector);
            sup_status.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
            logger.severe("Error while loading employee types : " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        supplier_firstname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        supplier_lastname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        supplier_email = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        supplier_mobile = new javax.swing.JTextField();
        supplier_update_btn = new javax.swing.JButton();
        supplier_reset_btn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        sup_status = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Lane1Field = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        lane2Field = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cityComboBox = new javax.swing.JComboBox<>();
        supIField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel3.setText("First Name");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 130, -1, -1));

        supplier_firstname.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jPanel3.add(supplier_firstname, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 125, 196, 34));

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel4.setText("Last Name");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 186, -1, -1));

        supplier_lastname.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jPanel3.add(supplier_lastname, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 181, 196, 34));

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel5.setText("Email");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 242, -1, -1));

        supplier_email.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jPanel3.add(supplier_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 237, 196, 34));

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel7.setText("Mobile");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 291, -1, -1));

        supplier_mobile.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jPanel3.add(supplier_mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 286, 196, 34));

        supplier_update_btn.setBackground(new java.awt.Color(33, 43, 108));
        supplier_update_btn.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        supplier_update_btn.setForeground(new java.awt.Color(255, 255, 255));
        supplier_update_btn.setText("UPDATE");
        supplier_update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplier_update_btnActionPerformed(evt);
            }
        });
        jPanel3.add(supplier_update_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 420, 159, 48));

        supplier_reset_btn.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        supplier_reset_btn.setForeground(new java.awt.Color(255, 0, 0));
        supplier_reset_btn.setText("RESET");
        supplier_reset_btn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        supplier_reset_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplier_reset_btnActionPerformed(evt);
            }
        });
        jPanel3.add(supplier_reset_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 150, 48));

        jPanel4.setBackground(new java.awt.Color(155, 192, 227));

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel1.setText("SUPPLIER DETAILS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(31, 31, 31))
        );

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, -1));

        jLabel8.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel8.setText("Status");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 341, -1, -1));

        sup_status.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        sup_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        sup_status.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.add(sup_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 335, 196, 37));

        jLabel9.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel9.setText("Address ");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 190, 80, -1));

        jLabel12.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(163, 163, 163));
        jLabel12.setText("(Optional)");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 190, -1, -1));

        jLabel10.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel10.setText("Lane 1");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, -1, -1));

        Lane1Field.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jPanel3.add(Lane1Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 240, 196, 34));

        jLabel11.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel11.setText("Lane 2");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, -1, -1));

        lane2Field.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jPanel3.add(lane2Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 290, 196, 34));

        jLabel13.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel13.setText("City");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 340, -1, -1));

        cityComboBox.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        cityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.add(cityComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 340, 196, 34));

        supIField.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jPanel3.add(supIField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, -1, 34));

        jLabel14.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel14.setText("Supplier ID");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, -1, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel3.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 11, 210));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void supplier_update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplier_update_btnActionPerformed

        String firstName = supplier_firstname.getText();
        String lastName = supplier_lastname.getText();
        String email = supplier_email.getText();
        String mobile = supplier_mobile.getText();
        String status = String.valueOf(sup_status.getSelectedItem());
        String sssid = supIField.getText();

        if (firstName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your first name", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (lastName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your last name", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your email", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (!RegexValidator.isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Invalid email", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (mobile.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your mobile number", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (status.equals("Select")) {
            JOptionPane.showMessageDialog(this, "Please Select Supplier Status", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                supplierModel.setId(sssid);
                supplierModel.setFirstName(firstName);
                supplierModel.setLastName(lastName);
                supplierModel.setEmail(email);
                supplierModel.setMobile(mobile);
                supplierModel.setStatusId(Integer.parseInt(StatusMap.get(sup_status.getSelectedItem())));

                new SupplierController().update(supplierModel);

                String lane1 = Lane1Field.getText().trim();
                String lane2 = lane2Field.getText().trim();
                String cityName = (String) cityComboBox.getSelectedItem();

                if (!lane1.isEmpty() || !lane2.isEmpty() || (cityName != null && !cityName.equals("Select"))) {
                    updateAddressData(sssid);

                } else {
                    JOptionPane.showMessageDialog(this, "Supplier details updated successfully");
                    this.dispose();

                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                logger.severe("Error while updating supplier: " + e.getMessage());
            }
        }


    }//GEN-LAST:event_supplier_update_btnActionPerformed

    private void updateAddressData(String supplierId) {
        String lane1 = (Lane1Field.getText() == null || Lane1Field.getText().trim().isEmpty()) ? null : Lane1Field.getText().trim();
        String lane2 = (lane2Field.getText() == null || lane2Field.getText().trim().isEmpty()) ? null : lane2Field.getText().trim();
        String cityName = (cityComboBox.getSelectedItem() == null || cityComboBox.getSelectedItem().equals("Select")) ? null : cityComboBox.getSelectedItem().toString();
        String cityId = null;

        try {

            if (cityName != null) {
                for (Map.Entry<Integer, String> entry : CityMap.entrySet()) {
                    if (entry.getValue().equals(cityName)) {
                        cityId = String.valueOf(entry.getKey());
                        break;
                    }
                }
            }
            if ((lane1 == null || lane1.isEmpty()) || (lane2 == null || lane2.isEmpty())) {
                JOptionPane.showMessageDialog(this, "Please fill in both Address Lanes.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            if (cityName == null || cityName.equals("Select")) {
                JOptionPane.showMessageDialog(this, "Address requires a city. Please select a city.", "Warning", JOptionPane.WARNING_MESSAGE);
                //return;
            } else {

                AddressModel addressModel = new AddressModel();
                addressModel.setLane1(lane1);
                addressModel.setLane2(lane2);
                addressModel.setCity(cityId);
                addressModel.setSupId(supplierId);

                String addressId = new AddressController().retrieveAddressId(supplierId);
                if (addressId != null) {
                    addressModel.setSupId(addressId);
                    new AddressController().update(addressModel);
                } else {
                    new AddressController().create(addressModel);
                }

                JOptionPane.showMessageDialog(this, "Supplier address updated successfully.");
                this.dispose();
            }

        } catch (Exception e) {
            e.printStackTrace();
            logger.severe("Error while updating address: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Error updating address: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void supplier_reset_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplier_reset_btnActionPerformed

        reset();
    }//GEN-LAST:event_supplier_reset_btnActionPerformed

    private void reset() {
        supIField.setText(supplierModel.getId());
        supplier_firstname.setText(supplierModel.getFirstName());
        supplier_lastname.setText(supplierModel.getLastName());
        supplier_email.setText(supplierModel.getEmail());
        supplier_mobile.setText(supplierModel.getMobile());
        sup_status.setSelectedItem(supplierModel.getStatusName());

        if (addressModel != null) {
            Lane1Field.setText(addressModel.getLane1());
            lane2Field.setText(addressModel.getLane2());
            if (addressModel.getCity() != null) {
                cityComboBox.setSelectedItem(CityMap.get(Integer.parseInt(addressModel.getCity())));
            }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Lane1Field;
    private javax.swing.JComboBox<String> cityComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField lane2Field;
    private javax.swing.JTextField supIField;
    private javax.swing.JComboBox<String> sup_status;
    private javax.swing.JTextField supplier_email;
    private javax.swing.JTextField supplier_firstname;
    private javax.swing.JTextField supplier_lastname;
    private javax.swing.JTextField supplier_mobile;
    private javax.swing.JButton supplier_reset_btn;
    private javax.swing.JButton supplier_update_btn;
    // End of variables declaration//GEN-END:variables
}
