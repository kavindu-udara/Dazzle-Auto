/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package views.supplier;

import com.formdev.flatlaf.FlatClientProperties;
import controllers.SupplierController;
import includes.LoggerConfig;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import models.SupplierModel;
import views.shop.grn.shop_GRNJPanel;

/**
 *
 * @author Dumindu
 */
public class SelectSuppliers extends javax.swing.JDialog {

    private shop_GRNJPanel shop_grnpanel;

    private static Logger logger = LoggerConfig.getLogger();

    /**
     * Creates new form SelectItems
     */
    public SelectSuppliers(java.awt.Frame parent, boolean modal, shop_GRNJPanel shop_grnpanel) {
        super(parent, modal);
        initComponents();
        ItemsTableRender();
        loadSuppliers();

        this.shop_grnpanel = shop_grnpanel;

        search_box.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Enter Item Name or Id ");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        search_box = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Supplier_View_Table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select Items");

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel1.setText("Search Suppliers");

        search_box.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        search_box.setFocusCycleRoot(true);
        search_box.setSelectionColor(new java.awt.Color(214, 132, 13));
        search_box.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_boxKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(search_box, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search_box, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        Supplier_View_Table.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        Supplier_View_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier ID", "First Name", "Last Name", "Email", "Mobile"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Supplier_View_Table.setRowHeight(30);
        Supplier_View_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Supplier_View_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Supplier_View_Table);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fetchSupplier(String searchText) throws Exception {
        DefaultTableModel model = (DefaultTableModel) Supplier_View_Table.getModel();
        model.setRowCount(0);

        try {
            ResultSet resultSet = new SupplierController().search(searchText);

            while (resultSet.next()) {
                String id = resultSet.getString("id");
                String fname = resultSet.getString("first_name");
                String lname = resultSet.getString("last_name");
                String email = resultSet.getString("email");
                String mobile = resultSet.getString("mobile");

                model.addRow(new Object[]{id, fname, lname, email, mobile});
            }

        } catch (Exception ex) {
            ex.printStackTrace();

            logger.severe("Error while searching Items in Select Suppliers : " + ex.getMessage());

        }
    }

    public void reloadTable() {
        loadSuppliers();
    }

    private void loadSuppliers() {
        try {

            ResultSet SupResultSet = new SupplierController().show();

            DefaultTableModel model = (DefaultTableModel) Supplier_View_Table.getModel();
            model.setRowCount(0);

            while (SupResultSet.next()) {
                Vector<String> vector = new Vector<>();

                String supId = SupResultSet.getString("id");
                vector.add(supId);
                vector.add(SupResultSet.getString("first_name"));
                vector.add(SupResultSet.getString("last_name"));
                vector.add(SupResultSet.getString("email"));
                vector.add(SupResultSet.getString("mobile"));

                model.addRow(vector);
            }

        } catch (Exception e) {
            e.printStackTrace();
            logger.severe("Error while loding items to table in select Suppliers : " + e.getMessage());

        }

    }


    private void search_boxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_boxKeyReleased
        // TODO add your handling code here:
        try {
            fetchSupplier(search_box.getText().toString());
        } catch (Exception ex) {
            ex.printStackTrace();
            logger.severe("Error while search Items in select Suppliers : " + ex.getMessage());

        }
    }//GEN-LAST:event_search_boxKeyReleased

    public void ItemsTableRender() {

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        JTableHeader tableHeader = Supplier_View_Table.getTableHeader();

        tableHeader.setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                Font headerFont = new Font("Verdana", Font.BOLD, 14);
                label.setBorder(BorderFactory.createEmptyBorder()); // Remove header borders
                label.setFont(headerFont);
                label.setBackground(new Color(5, 15, 76)); // Optional: Set header background color
                label.setForeground(Color.WHITE); // Optional: Set header text color
                label.setHorizontalAlignment(SwingConstants.CENTER); // Center the text
                return label;
            }
        });

        tableHeader.setPreferredSize(new Dimension(tableHeader.getPreferredSize().width, 30));

        for (int i = 0; i < 4; i++) {
            Supplier_View_Table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }

    private void Supplier_View_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Supplier_View_TableMouseClicked
        // TODO add your handling code here:
        int row = Supplier_View_Table.getSelectedRow();

        if (row != -1) {

            String id = String.valueOf(Supplier_View_Table.getValueAt(row, 0));
            String fName = String.valueOf(Supplier_View_Table.getValueAt(row, 1));
            String lName = String.valueOf(Supplier_View_Table.getValueAt(row, 2));

            SupplierModel supplierModel = new SupplierModel();
            supplierModel.setId(id);
            supplierModel.setFirstName(fName);
            supplierModel.setLastName(lName);
            

            shop_grnpanel.setSelectedSupplier(supplierModel);

            this.dispose();
        }
    }//GEN-LAST:event_Supplier_View_TableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Supplier_View_Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField search_box;
    // End of variables declaration//GEN-END:variables
}
